# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  name: SouthSeattlePool
#  demands:
#  - agent.os -equals Darwin
#  - anotherCapability -equals somethingElse

variables:
  solution: 'UE4.sln'
  buildPlatform: 'Win64'
  buildConfiguration: 'Development Editor'

stages:
- stage: Alpha
  jobs:

# Extract files
# Extract a variety of archive and compression files such as .7z, .rar, .tar.gz, and .zip
  - job: A
    timeoutInMinutes: 0 # how long to run the job before automatically cancelling
    cancelTimeoutInMinutes: 2 # how much time to give 'run always even if cancelled tasks' before stopping them

    steps:
    #- task: PowerShell@2
     # inputs:
       # targetType: 'filePath'
      #  filePath: $(System.DefaultWorkingDirectory)\test2.ps1
       # arguments: > # Use this to avoid newline characters in multiline string

  # Batch script
  # Run a Windows command or batch script and optionally allow it to change the environment
    - task: BatchScript@1
      inputs:
        filename: 'Setup.bat'
        arguments: '-exclude=Linux -exclude=IOS'
      #modifyEnvironment: False # Optional
      #workingFolder: # Optional
      #failOnStandardError: false # Optional

  # Batch script
  # Run a Windows command or batch script and optionally allow it to change the environment
    - task: BatchScript@1
      inputs:
        filename: 'GenerateProjectFiles.bat'
      #arguments: # Optional
      #modifyEnvironment: False # Optional
      #workingFolder: # Optional
      #failOnStandardError: false # Optional

    - task: NuGetToolInstaller@1

    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: PowerShell@2
      inputs:
        targetType: 'filePath'
        filePath: $(System.DefaultWorkingDirectory)\test3.ps1
        arguments: > # Use this to avoid newline characters in multiline string
